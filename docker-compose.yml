services:
  web:
    build: .
    env_file:
      - .env
    command: >
      sh -c "sleep 10 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      retries: 5
      timeout: 3s

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  celery:
    build: .
    env_file:
      - .env
    command: >
      sh -c "sleep 15 && celery -A battleforge worker --loglevel=info"
    depends_on:
      web:
        condition: service_started
      redis:
        condition: service_started
      db:
        condition: service_healthy

  celery_beat:
    build: .
    env_file:
      - .env
    command: >
      sh -c "sleep 20 && celery -A battleforge beat --loglevel=info"
    depends_on:
      celery:
        condition: service_started
      db:
        condition: service_healthy

volumes:
  postgres_data:
